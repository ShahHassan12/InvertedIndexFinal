#BlueJ class context
comment0.target=PostingList
comment0.text=\r\n\ This\ is\ a\ postingList\ class\ that\ will\ be\ used\ to\ hold\ a\ the\ postings\ of\ a\ word\r\n\ through\ out\ all\ the\ document\r\n\r\n\ Michael\ Scanlon\ &\ Shah\ Hassan\ Syed\r\n
comment1.params=
comment1.target=PostingList()
comment1.text=\r\n\ Constructor\ for\ postingList\ \r\n
comment10.params=
comment10.target=java.lang.String\ getTerm()
comment10.text=\r\n\ Returns\ the\ term\ for\ which\ the\ postingList\ exists\r\n
comment11.params=
comment11.target=void\ updateIdf()
comment11.text=\r\n\ Method\ that\ will\ calculate\ idf\ of\ the\ word\ according\ to\ the\ certain\ instance\r\n
comment12.params=
comment12.target=double\ getIdf()
comment12.text=\r\n\ Returns\ the\ idf\ of\ this\ word,\ for\ which\ the\ posting\ list\ exists\r\n
comment2.params=term\ freq
comment2.target=PostingList(java.lang.String,\ int)
comment2.text=\r\n\ Constructor\ with\ predefined\ parameters\r\n
comment3.params=term\ freq\ p
comment3.target=PostingList(java.lang.String,\ int,\ Posting)
comment3.text=\r\n\ Constructor\ with\ predefined\ params\r\n
comment4.params=
comment4.target=int\ getFrequency()
comment4.text=\r\n\ returns\ frequency\ of\ the\ word\ in\ the\ corpus\r\n
comment5.params=p\ position
comment5.target=void\ foundWord(Posting,\ int)
comment5.text=\r\n\ method\ to\ update\ the\ postingList\ if\ the\ word\ already\ exists\ is\ the\ index,\ \r\n\ so\ no\ new\ PostingList\ is\ created\r\n
comment6.params=
comment6.target=java.util.ArrayList\ getPostings()
comment6.text=\r\n\ Returns\ posting\ associated\ with\ \r\n
comment7.params=docID
comment7.target=java.util.LinkedList\ returnPositions(java.lang.String)
comment7.text=\r\n\ Return\ an\ arrayList\ that\ holds\ all\ the\ positions\ where\ the\ word\ occurs\ in\ a\ certain\ document\r\n\ \r\n\ param\ docID\ -\ which\ document\ to\ look\ for\ the\ position\r\n
comment8.params=docID\ i
comment8.target=boolean\ isAtPosition(java.lang.String,\ int)
comment8.text=\r\n\ method\ to\ know\ if\ there\ exists\ a\ word\ at\ a\ certain\ position\ in\ the\ document\r\n\ Best\ used\ for\ the\ phrase\ Search\r\n\ \r\n\ param\ docID\ -\ \ the\ document\ in\ which\ to\ search\r\n\ param\ i\ -\ the\ position\ to\ check\ for\ the\ existence\ of\ the\ word\r\n
comment9.params=docID
comment9.target=boolean\ containsDoc(java.lang.String)
comment9.text=\r\n\ Method\ to\ check\ if\ a\ document\ exists\ in\ the\ postingList,\ \r\n\ alternatively\ checking\ if\ the\ word\ is\ contained\ in\ a\ certain\ document\r\n\ \r\n\ param\ docID\ -\ the\ document\ to\ be\ checked\ for\r\n
numComments=13
